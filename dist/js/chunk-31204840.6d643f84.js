(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-31204840"],{2704:function(e,t,n){},"498a":function(e,t,n){"use strict";var a=n("23e7"),r=n("58a8").trim,s=n("c8d2");a({target:"String",proto:!0,forced:s("trim")},{trim:function(){return r(this)}})},"58cb":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",[n("codemirror",{attrs:{options:e.cmOption},on:{focus:function(t){return e.sqlCodeFocus(e.code)},blur:function(t){return e.sqlCodeBlur(e.code)}},model:{value:e.code,callback:function(t){e.code=t},expression:"code"}})],1)},r=[],s=n("d4ec"),i=n("bee2"),o=n("262e"),l=n("2caf"),c=(n("498a"),n("9ab4")),d=n("1b40"),m=n("8f94"),u=(n("ffda"),n("8c06"),function(e){Object(o["a"])(n,e);var t=Object(l["a"])(n);function n(){var e;return Object(s["a"])(this,n),e=t.apply(this,arguments),e.code='\n-- sql语句的注意 : 1 以;作为结束符  2 不区分大小写\n-- 01 mysql 数据库的操作\n\n    -- **链接数据库**\n    mysql -uroot -pmysql\n    \n    -- 不显示密码\n    mysql -uroot -p\n    mysql\n\n    -- 退出数据库\n    exit/quti/ctrl + d\n    \n\n    -- sql语句最后需要有分号;结尾\n    -- 显示数据库版本 version\n    select version();\n\n    -- 显示时间\n    select now();\n    \n    -- 查看当前使用的数据库\n    select database();\n\n    -- 查看所有数据库\n    show databases;\n\n    -- 创建数据库\n    -- create database 数据库名 charset=utf8;\n    create database python01;  # 可能会出现乱码\n    create database python01 charset=utf8;\n\n    -- 查看创建数据库的语句\n    -- show create database ....\n    show create database python01;\n     \n\n    -- 使用数据库\n    -- use 数据库的名字\n    use python01;\n\n    -- 删除数据库\n    -- drop database 数据库名;\n    drop database python01;\n\n\n--02 数据表的操作\n\n    -- 查看当前数据库中所有表\n    show tables;\n\n    \n\n    -- 创建表\n      -- int unsigned 无符号整形\n    -- auto_increment 表示自动增长\n    -- not null 表示不能为空\n    -- primary key 表示主键  数据库主键，指的是一个列或多列的组合，\n    -- 其值能唯一地标识表中的每一行，通过它可强制表的实体完整性。\n    -- 主键主要是用于其他表的外键关联，以及本记录的修改与删除。\n\n    -- default 默认值\n    -- create table 数据表名字 (字段 类型 约束[, 字段 类型 约束]);\n\n    create table xxx(\n        id int unsigned primary key not null auto_increment,\n        name varchar(20) not null\n    );\n\n    -- 查看表结构\n    -- desc 数据表的名字;\n    desc xxx;\n   \n    -- 创建 classes 表(id、name)\n        -- varchar表示可变长度的字符串\n        --\n    create table classes(\n        id int unsigned primary key auto_increment not null,\n        name varchar(20) not null\n    );\n    \n    -- 创建 students 表(id、name、age、high (decimal)、gender (enum)、cls_id)\n        --  decimal表示浮点数，如decimal(5,2)表示共存5位数，小数占2位，例如：185.88\n        --  枚举类型(enum) 例如：enum("男性","女性","中性","保密")\n    create table students(\n        id int unsigned primary key auto_increment not null,\n        name varchar(20) not null,\n        age int unsigned,\n        high decimal(5,2),\n        gender enum("男性","女性","中性","保密") default "保密",\n        cls_id int unsigned\n    );\n    \n\n    -- 查看表的创建语句\n    -- show create table 表名字;\n   show create table xxx;\n\n\n    -- 修改表-添加字段 mascot (吉祥物)\n    -- alter table 表名 add 列名 类型;\n   alter table classes add chongwu varchar(20) default"蛇";\n\n    -- 修改表-修改字段：不重命名版\n    -- alter table 表名 modify 列名 类型及约束;\n    alter table classes modify mascot varchar(30) default"葫芦娃";\n\n\n    -- 修改表-修改字段：重命名版\n    -- alter table 表名 change 原名 新名 类型及约束;\n    alter table classes change chongwu mascot varchar(20) default"法拉利";\n\n\n    -- 修改表-删除字段\n    -- alter table 表名 drop 列名;\n    alter table classes drop mascot;\n\n\n    -- 删除表\n    -- drop table 表名;\n    -- drop database 数据库;\n   \n\n    \n--03 增删改查(curd)\n\n    -- 增加\n+-------+------------------+------+-----+---------+----------------+\n| Field | Type             | Null | Key | Default | Extra          |\n+-------+------------------+------+-----+---------+----------------+\n| id    | int(10) unsigned | NO   | PRI | NULL    | auto_increment |\n| name  | varchar(20)      | NO   |     | NULL    |                |\n+-------+------------------+------+-----+---------+----------------+\n\n\n\n        -- 全列插入\n        -- insert [into] 表名 values(...)\n        -- 主键字段 可以用 0  null   default 来占位\n        -- 向classes表中插入 一个班级\n        insert into classes values(1,"python大神班");\n+--------+-------------------------------------------+------+-----+---------+----------------+\n| Field  | Type                                      | Null | Key | Default | Extra          |\n+--------+-------------------------------------------+------+-----+---------+----------------+\n| id     | int(10) unsigned                          | NO   | PRI | NULL    | auto_increment |\n| name   | varchar(20)                               | NO   |     | NULL    |                |\n| age    | int(10) unsigned                          | YES  |     | NULL    |                |\n| high   | decimal(5,2)                              | YES  |     | NULL    |                |\n| gender | enum(\'男性\',\'女性\',\'保密\')                  | YES  |     | 保密     |                |\n| cls_id | int(10) unsigned                          | YES  |     | NULL    |                |\n+--------+-------------------------------------------+------+-----+---------+----------------+\n\n        -- 向students表插入 一个学生信息\n        insert into students values(1,"班主任",18,166.66,2,111);\n        insert into students values(0,"吴彦祖",42,188.88,1,222);\n        insert into students values(null,"晨哥",28,188.88,1,333);\n\n        -- 部分插入\n        -- insert into 表名(列1,...) values(值1,...)\n        insert into students(name) values("老王");\n\n        -- 多行插入\n        insert into students values(null,"老李",28,188.88,1,333),(null,"赵四",28,188.88,1,333);\n\n\n    -- 修改\n    -- update 表名 set 列1=值1,列2=值2... where 条件;\n        -- 全部修改\n        update students set high = 170.00;\n        -- 按条件修改\n        update students set high = 170.00 where id=3;\n        -- 按条件修改多个值\n        -- update students set gender ="",name = "xxx" ;\n        update students set gender="中性",name="111" where id=3;\n        \n    -- 查询基本使用\n        -- 查询所有列\n        -- select * from 表名;\n        select * from students;\n\n        ---定条件查询\n       select * from students where id=1;\n\n\n        -- 查询指定列\n        -- select 列1,列2,... from 表名;\n        select name,gender from students;\n\n\n        -- 可以使用as为列或表指定别名\n        -- select 字段[as 别名] , 字段[as 别名] from 数据表;\n       select name as "姓名",gender as "性别" from students;\n\n\n        -- 字段的顺序\n        select gender as "性别",name as "姓名" from students;\n    \n\n    -- 删除\n        -- 物理删除\n        -- delete from 表名 where 条件\n       delete from students where id=3;\n        -- 逻辑删除\n        -- 用一个字段来表示 这条信息是否已经不能再使用了\n        -- 给students表添加一个 is_delete 字段 bit 类型\n        alter table students add is_delete bit default 0;\n        update students set is_delete=1 where id = 1;\n    -- 数据库备份与恢复(了解)\n        -- mysqldump –uroot –p 数据库名 > python.sql;\n        -- mysql -uroot –p 新数据库名 < python.sql;\n        \n        \n        \n        \n-- 查询练习\n    -- 查询所有字段\n    -- select * from 表名;\n    select * from students;\n\n    -- 查询指定字段\n    -- select 列1,列2,... from 表名;\n    select name,gender from students;\n    \n    -- 使用 as 给字段起别名\n    -- select 字段 as 名字.... from 表名;\n    select name as "姓名",gender as "性别" from students;\n\n    -- select 表名.字段 .... from 表名;\n    select name as "姓名",gender as "性别" from students as s;\n\n    \n    -- 可以通过 as 给表起别名\n    -- select 别名.字段 .... from 表名 as 别名;\n    select s.name as "姓名",s.gender as "性别" from students as s;\n    \n    失败的select students.name, students.age from students as s;\n    \n\n    -- 消除重复行(查性别)\n    \n    -- distinct 字段 \n    select gender from students;\n    select distinct gender from students;\n    \n\n-- 条件查询\n    -- 比较运算符\n        -- select .... from 表名 where .....\n        -- >\n        -- 查询大于18岁的信息\n        select * from students where age > 18;\n\n        -- <\n        -- 查询小于18岁的信息\n        select * from students where age < 18;\n        \n\n        -- >=\n        -- <=\n        -- 查询小于或者等于18岁的信息\n        select * from students where age <= 18;\n        -- =\n        -- 查询年龄为18岁的所有学生的名字\n        (区别)select * from students where age = 18;\n\n\n        -- != 或者 <>\n        select * from students where age != 18;\n        \n\n    -- 逻辑运算符\n        -- and\n        -- 18和28之间的所以学生信息\n        select * from students where age >=18 and age <=28;\n        \n        失败 select * from students where age>18 and <28;\n\n\n\n        -- 18岁以上的女性\n        select * from students where age > 18 and gender = 2;\n\n        -- or\n        -- 18以上或者身高高过180(包含)以上\n        select * from students where age > 18 or height >= 180;\n\n\n        -- not\n        -- 不在 18岁以上的女性 这个范围内的信息\n        -- select * from students where not age>18 and gender=2;\n        select * from students where not (age > 18 and gender = 2);\n\n            \n\n\n    -- 模糊查询(where name like 要查询的数据)\n        -- like \n        -- % 替换任意个\n        -- _ 替换1个\n        -- 查询姓名中 以 "小" 开始的名字\n        select * from students where name like "小%";\n        \n\n        -- 查询姓名中 有 "小" 所有的名字\n        select * from students where name like "%小%";\n\n        -- 查询有2个字的名字\n        select * from students where name like "__";\n        \n\n        -- 查询有3个字的名字\n        select * from students where name like "___";\n        \n\n        -- 查询至少有2个字的名字\n        select * from students where name like "__%";\n\n\n\n    -- 范围查询\n        -- in (1, 3, 8)表示在一个非连续的范围内\n        -- 查询 年龄为18、34的姓名\n        select * from students where age =18 or age = 34;\n        select * from students where age in (18,34);\n        \n        -- not in 不非连续的范围之内\n        -- 年龄不是 18、34岁之间的信息\n        select * from students where age not in (18,34);\n        \n        (注意)select name from students where not age in (18,34);\n\n\n        -- between ... and ...表示在一个连续的范围内\n        -- 查询 年龄在18到34之间的的信息\n        select * from students where age between 18 and 34;\n        \n        -- not between ... and ...表示不在一个连续的范围内\n        -- 查询 年龄不在在18到34之间的的信息\n        select * from students where age not between 18 and 34;\n        \n        失败的select * from students where age not (between 18 and 34);\n        \n\n    -- 空判断\n        -- 判空is null\n        -- 查询身高为空的信息\n        select * from students where height is null;\n        \n        -- 判非空is not null\n        select * from students where height is not null;\n        \n        失败select * from students where height not is  null;\n\n\n\n-- 排序\n    -- order by 字段\n    -- asc从小到大排列，即升序\n    -- desc从大到小排序，即降序\n\n    -- 查询年龄在18到34岁之间的男性，按照年龄从小到大到排序\n    select * from students where (age between 18 and 34) and gender = 1 order by age asc;\n    -- 查询年龄在18到34岁之间的女性，身高从高到矮排序\n    select * from students where (age between 18 and 34) and gender = 2 order by height desc;\n    \n\n    -- order by 多个字段\n    -- 查询年龄在18到34岁之间的女性，身高从高到矮排序, 如果身高相同的情况下按照年龄从小到大排序\n    select * from students where (age between 18 and 34) and gender = 2 order by height desc,age asc;\n\n    -- 查询年龄在18到34岁之间的女性，身高从高到矮排序, 如果身高相同的情况下按照年龄从小到大排序,\n    -- 如果年龄也相同那么按照id从大到小排序\n    select * from students where (age between 18 and 34) and gender = 2 order by height desc,age asc,id desc;\n\n    \n\n\n-- 聚合函数\n    -- 总数\n    -- count\n    -- 查询男性有多少人，女性有多少人\n    select count(*) from students where gender = 1;\n    select count(*) from students where gender = 2;\n\n    -- 最大值\n    -- max\n    -- 查询最大的年龄\n    select max(age) from students;\n\n    -- 查询女性的最高 身高\n    select max(height) from students where gender = 2;\n\n    -- 最小值\n    -- min\n    select min(height) from students where gender = 2;\n    \n    -- 求和\n    -- sum\n    -- 计算所有人的年龄总和\n    select sum(age) from students;\n\n    \n    -- 平均值\n    -- avg\n    -- 计算平均年龄\n    select avg(age) from students;\n\n\n    -- 计算平均年龄 sum(age)/count(*)\n    \n\n\n    -- 四舍五入 round(123.23 , 1) 保留1位小数\n    -- 计算所有人的平均年龄，保留3位小数\n    select round(avg(age),3) from students;\n\n    -- 计算男性的平均身高 保留2位小数\n    select round(avg(height),2) from students where gender = 1;\n    \n\n-- 分组\n\n    -- group by\n    -- 按照性别分组,查询所有的性别\n    select gender from students group by gender;\n    -- select name,gender from students group by gender;\n    -- 失败select * from students group by gender;\n    select * from students group by gender;\n    -- 计算每种性别中的人数\n    select count(*),gender from students group by gender;\n\n    -- group_concat(...)\n    -- 查询同种性别中的姓名\n     select group_concat(name),gender from students group by gender;\n    \n    -- 查询每组性别的平均年龄\n    select avg(age),gender from students group by gender;\n\n    -- having(注意having和group by)\n    (!)-- 查询平均年龄超过30岁的性别，以及姓名 having avg(age) > 30\n    select gender,group_concat(name) from students \n    group by gender \n    having avg(age) > 30;\n    \n    -- 查询每种性别中的人数多于2个的信息\n    select gender,group_concat(name) from students group by gender having count(*) > 2;\n\n    -- with rollup 汇总的作用(了解)\n    select gender,count(*) from students group by gender with rollup;\n\n-- 分页\n    -- limit start, count\n    \n    -- 限制查询出来的数据个数\n    -- 查询前5个数据\n    select * from students limit 5;\n    \n    -- 每页显示2个，第1个页面\n    select * from students limit 0,2;\n\n    -- 每页显示2个，第2个页面\n    select * from students limit 2,2;\n\n    -- 每页显示2个，第3个页面\n    select * from students limit 4,2;\n\n    -- 每页显示2个，第4个页面\n    select * from students limit 6,2;\n    \n\n    -- 每页显示2个，显示第6页的信息, 按照年龄从小到大排序(limit 必须写到sql语句的最后)\n    错误1 select * from students limit 10,2 order by age asc;\n    \n    -- 工作错误的写法\n    错误2 select * from students limit 2*(6-1),2;\n    \n    -- limit 放在最后面(注意)\n     \n\n\n-- 连接查询\n    -- inner join ... on\n    -- select ... from 表A inner join 表B;\n    select * from students inner join classes;\n    \n    -- 查询 有能够对应班级的学生以及班级信息\n    select * from students inner join classes on students.cls_id = classes.id;\n\n    -- 按照要求显示姓名、班级\n    select students.name,classes.name from students inner join classes on students.cls_id = classes.id;\n\n    -- 给数据表起名字\n    select s.name,c.name from students as s inner join classes as c on s.cls_id = c.id;\n\n    -- 查询 有能够对应班级的学生以及班级信息，显示学生的所有信息 students.*，只显示班级名称 classes.name.\n    select s.*,c.name from students as s inner join classes as c on s.cls_id = c.id;\n    \n    -- 在以上的查询中，将班级姓名显示在第1列\n    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id;\n\n    -- 查询 有能够对应班级的学生以及班级信息, 按照班级进行排序\n    -- select c.xxx s.xxx from students as s inner join clssses as c on .... order by ....;\n    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id order by c.name;\n    \n    -- 当时同一个班级的时候，按照学生的id进行从小到大排序\n    select c.name,s.* from students as s inner join classes as c on s.cls_id = c.id order by c.name,id asc;\n\n    -- left join\n    -- 查询每位学生对应的班级信息\n    select * from students left join classes on students.cls_id = classes.id;\n    -- select * from students right join classes on students.cls_id = classes.id;\n\n    -- 查询没有对应班级信息的学生\n    -- select ... from xxx as s left join xxx as c on..... where .....\n    -- select ... from xxx as s left join xxx as c on..... having .....\n    select * from students left join classes on students.cls_id = classes.id where classes.name is null;\n    \n    (注意)不建议使用 select * from students left join classes on students.cls_id=classes.id having classes.id is null;\n    \n    -- right join   on\n    -- 将数据表名字互换位置，用left join完成\n\n\n    \n\n    -- 子查询\n        -- 标量子查询: 子查询返回的结果是一个数据(一行一列)\n        -- 列子查询: 返回的结果是一列(一列多行)\n\n        -- 行子查询: 返回的结果是一行(一行多列)\n\n        -- 查询出高于平均身高的信息(height)\n        -- 1 查出平均身高\n        select avg(height) from students ; -- 172\n        -- 2 查出高于平均身高的信息\n        select * from students where height >(select avg(height) from students) ;\n\n        -- 查询学生的班级号能够对应的 学生名字\n        -- select name from students where cls_id in (select id from classes);\n        -- 1 查出所有的班级id\n        select id from classes; -- 1,2\n        -- 2 查出能够对应上班级号的学生信息\n        select * from students where cls_id in (select id from classes);\n\n     -- sql强化演练( goods 表练习)\n\n    -- 查询类型 cate_name 为 \'超级本\' 的商品名称 name 、价格 price ( where )\n    select name,price from goods where cate_name = "超级本";\n\n\n    -- 显示商品的种类\n    -- 1 分组的方式( group by ) \n    select cate_name from goods group by cate_name;\n\n    -- 2 去重的方法( distinct )\n    select distinct cate_name from goods;\n\n\n    -- 求所有电脑产品的平均价格 avg ,并且保留两位小数( round )\n    select round(avg(price),2) from goods;\n    -- 显示 每种类型 cate_name (由此可知需要分组)的 平均价格\n    select cate_name,avg(price) from goods group by cate_name;\n\n\n    -- 查询 每种类型 的商品中 最贵 max 、最便宜 min 、平均价 avg 、数量 count\n    select max(price),min(price),avg(price),count(*) from goods group by cate_name;\n\n\n    -- 查询所有价格大于 平均价格 的商品，并且按 价格降序 排序 order desc\n\n    -- 1 查询平局价格(avg_price)\n    select avg(price) as avg_price from goods;\n\n\n    -- 2 使用子查询\n    select * from goods where price > (select avg(price) as avg_price from goods) order by price desc;\n\n\n    -- 查询每种类型中最贵的电脑信息(难)\n\n    -- 1 查找 每种类型 中 最贵的 max_price 价格\n    select cate_name,max(price) as max_price from goods group by cate_name;\n\n\n    -- 2 关联查询 inner join 每种类型 中最贵的物品信息\n    -- select * from goods \n    -- inner join\n    -- (select cate_name,max(price) as max_price from goods group by cate_name) as max_price_goods\n    -- on goods.cate_name=max_price_goods.cate_name and goods.price=max_price_goods.max_price;\n    select * from goods\n    inner join\n    (select cate_name,max(price) as max_price from goods group by cate_name) as max_price_goods\n    on goods.cate_name = max_price_goods.cate_name and goods.price = max_price_goods.max_price;\n\n\n    -- 创建"商品分类"表\n\n    第一步    创建表 (商品种类表 goods_cates )\n\n    create table if not exists goods_cates(\n        id int unsigned primary key auto_increment,\n        name varchar(40) not null\n    );\n\n\n\n    第二步    同步 商品分类表 数据 将商品的所有 (种类信息) 写入到 (商品种类表) 中\n\n    -- 按照 分组 的方式查询 goods 表中的所有 种类(cate_name)\n    select cate_name from goods group by cate_name;\n\n    -- (注意) 把查询出来的 结果 写入 goods_cates 表里去 ( insert into ) 只插入name\n    insert into goods_cates(name) (select cate_name from goods group by cate_name);\n\n\n\n    第三部 同步 商品表 数据 通过 goods_cates 数据表来更新 goods 表\n\n    -- 因为要通过 goods_cates表 更新 goods 表 所以要把两个表连接起来\n    select * from goods inner join goods_cates on goods.cate_name = goods_cates.name;\n\n    -- 把 商品表 goods 中的 cate_name 全部替换成 商品分类表中的 商品id ( update ... set )\n    update (goods inner join goods_cates  on goods.cate_name = goods_cates.name) set goods.cate_name = goods_cates.id;\n\n    第四部 修改表结构\n\n    -- 查看表结构(注意 两个表中的 外键类型需要一致)\n    desc goods;\n\n    -- 修改表结构 alter table 字段名字不同 change,把 cate_name 改成 cate_id int unsigned not null\n    alter table goods change cate_name cate_id int unsigned not null;\n\n\n\n    -- 创建 商品品牌表 goods_brands\n\n    第一步 创建 "商品品牌表" 表\n    -- 第一种方式 先创建表\n    create table goods_brands (\n        id int unsigned primary key auto_increment,\n        name varchar(40) not null);\n\n    -- 插入数据 brand_name(分组)\n    -- 按照 分组 的方式查询 goods 表中的所有 种类(brand_name)\n    select brand_name from goods group by brand_name;\n    --(注意) 把查询出来的 结果 写入 goods_brands 表里去 ( insert into ) 只插入name\n    insert into goods_brands(name) (select brand_name from goods group by brand_name);\n\n\n    -- 第二种方式 创建表的同时插入数据(了解,不建议使用)\n    create table goods_brands (\n        id int unsigned primary key auto_increment,\n        name varchar(40) not null) select brand_name as name from goods group by brand_name;\n\n    第二步 同步数据\n    -- 通过goods_brands数据表来更新goods数据表 g.brand_name=b.id\n    update (goods inner join goods_brands on goods.brand_name = goods_brands.name) set goods.brand_name = goods_brands.id;\n\n    第三部 修改表结构\n    -- 通过alter table语句修改表结构 brand_id int unsigned not null\n    alter table goods change brand_name brand_id int unsigned not null;\n\n\n\n\n\n\n    -- 外键的使用(了解)\n\n    -- 向goods表里插入任意一条数据\n    insert into goods (name,cate_id,brand_id,price) values(\'老王牌拖拉机\', 10, 10,\'6666\');\n\n    -- 约束 数据的插入 使用 外键 foreign key\n    -- alter table goods add foreign key (brand_id) references goods_brands(id);\n    alter table goods add foreign key (cate_id) references goods_cates(id);\n    alter table goods add foreign key(brand_id) references goods_brands(id);\n\n    -- 失败原因 老王牌拖拉机 delete\n    -- delete from goods where name="老王牌拖拉机";\n    delete from goods where name="老王牌拖拉机";\n\n    -- 创建表的同时设置外键 (注意 goods_cates 和 goods_brands 两个表必须事先存在)\n    create table goods(\n        id int primary key auto_increment not null,\n        name varchar(40) default \'\',\n        price decimal(5,2),\n        cate_id int unsigned,\n        brand_id int unsigned,\n        is_show bit default 1,\n        is_saleoff bit default 0,\n        foreign key(cate_id) references goods_cates(id),\n        foreign key(brand_id) references goods_brands(id)\n    );\n\n\n    -- 如何取消外键约束\n\n    -- 需要先获取外键约束名称,该名称系统会自动生成,可以通过查看表创建语句来获取名称\n    show create table goods;\n\n    -- 获取名称之后就可以根据名称来删除外键约束\n    alter table goods drop foreign key goods_ibfk_1;\n    alter table goods drop foreign key goods_ibfk_2;\n\n\n    总结:在实际开发中,很少会使用到外键约束,会极大的降低表更新的效率\n\n    -- python与mysql的交互使用\n    -- 基本流程 1 connection对象 |2 cursor对象 |3 关闭cursor |4 关闭connection\n\n    -- sql注入  \' or 1 or \'\n    select * from goods where name = \'%s\' % name\n\n    select * from goods ;\n',e.cmOption={tabSize:4,styleActiveLine:!0,lineNumbers:!0,line:!0,mode:"text/x-mysql",theme:"dracula dark"},e}return Object(i["a"])(n,[{key:"sqlCodeFocus",value:function(e){"请输入代码"==e&&(this.code="")}},{key:"sqlCodeBlur",value:function(e){""==String(e).trim()&&(this.code="请输入代码")}}]),n}(d["d"]));u=Object(c["a"])([Object(d["a"])({components:{codemirror:m["codemirror"]}})],u);var p=u,g=p,_=(n("bb48"),n("2877")),h=Object(_["a"])(g,a,r,!1,null,"9ae020fa",null);t["default"]=h.exports},"8c06":function(e,t,n){},bb48:function(e,t,n){"use strict";n("2704")},c8d2:function(e,t,n){var a=n("5e77").PROPER,r=n("d039"),s=n("5899"),i="​᠎";e.exports=function(e){return r((function(){return!!s[e]()||i[e]()!==i||a&&s[e].name!==e}))}},ffda:function(e,t,n){(function(e){e(n("56b3"))})((function(e){"use strict";function t(e){var t;while(null!=(t=e.next()))if("`"==t&&!e.eat("`"))return"variable-2";return e.backUp(e.current().length-1),e.eatWhile(/\w/)?"variable-2":null}function n(e){var t;while(null!=(t=e.next()))if('"'==t&&!e.eat('"'))return"variable-2";return e.backUp(e.current().length-1),e.eatWhile(/\w/)?"variable-2":null}function a(e){return e.eat("@")&&(e.match("session."),e.match("local."),e.match("global.")),e.eat("'")?(e.match(/^.*'/),"variable-2"):e.eat('"')?(e.match(/^.*"/),"variable-2"):e.eat("`")?(e.match(/^.*`/),"variable-2"):e.match(/^[0-9a-zA-Z$\.\_]+/)?"variable-2":null}function r(e){return e.eat("N")?"atom":e.match(/^[a-zA-Z.#!?]/)?"variable-2":null}e.defineMode("sql",(function(t,n){var a=n.client||{},r=n.atoms||{false:!0,true:!0,null:!0},l=n.builtin||i(o),c=n.keywords||i(s),d=n.operatorChars||/^[*+\-%<>!=&|~^\/]/,m=n.support||{},u=n.hooks||{},p=n.dateSQL||{date:!0,time:!0,timestamp:!0},g=!1!==n.backslashStringEscapes,_=n.brackets||/^[\{}\(\)\[\]]/,h=n.punctuation||/^[;.,:]/;function f(e,t){var n=e.next();if(u[n]){var s=u[n](e,t);if(!1!==s)return s}if(m.hexNumber&&("0"==n&&e.match(/^[xX][0-9a-fA-F]+/)||("x"==n||"X"==n)&&e.match(/^'[0-9a-fA-F]+'/)))return"number";if(m.binaryNumber&&(("b"==n||"B"==n)&&e.match(/^'[01]+'/)||"0"==n&&e.match(/^b[01]+/)))return"number";if(n.charCodeAt(0)>47&&n.charCodeAt(0)<58)return e.match(/^[0-9]*(\.[0-9]+)?([eE][-+]?[0-9]+)?/),m.decimallessFloat&&e.match(/^\.(?!\.)/),"number";if("?"==n&&(e.eatSpace()||e.eol()||e.eat(";")))return"variable-3";if("'"==n||'"'==n&&m.doubleQuote)return t.tokenize=b(n),t.tokenize(e,t);if((m.nCharCast&&("n"==n||"N"==n)||m.charsetCast&&"_"==n&&e.match(/[a-z][a-z0-9]*/i))&&("'"==e.peek()||'"'==e.peek()))return"keyword";if(m.escapeConstant&&("e"==n||"E"==n)&&("'"==e.peek()||'"'==e.peek()&&m.doubleQuote))return t.tokenize=function(e,t){return(t.tokenize=b(e.next(),!0))(e,t)},"keyword";if(m.commentSlashSlash&&"/"==n&&e.eat("/"))return e.skipToEnd(),"comment";if(m.commentHash&&"#"==n||"-"==n&&e.eat("-")&&(!m.commentSpaceRequired||e.eat(" ")))return e.skipToEnd(),"comment";if("/"==n&&e.eat("*"))return t.tokenize=y(1),t.tokenize(e,t);if("."!=n){if(d.test(n))return e.eatWhile(d),"operator";if(_.test(n))return"bracket";if(h.test(n))return e.eatWhile(h),"punctuation";if("{"==n&&(e.match(/^( )*(d|D|t|T|ts|TS)( )*'[^']*'( )*}/)||e.match(/^( )*(d|D|t|T|ts|TS)( )*"[^"]*"( )*}/)))return"number";e.eatWhile(/^[_\w\d]/);var i=e.current().toLowerCase();return p.hasOwnProperty(i)&&(e.match(/^( )+'[^']*'/)||e.match(/^( )+"[^"]*"/))?"number":r.hasOwnProperty(i)?"atom":l.hasOwnProperty(i)?"type":c.hasOwnProperty(i)?"keyword":a.hasOwnProperty(i)?"builtin":null}return m.zerolessFloat&&e.match(/^(?:\d+(?:e[+-]?\d+)?)/i)?"number":e.match(/^\.+/)?null:m.ODBCdotTable&&e.match(/^[\w\d_$#]+/)?"variable-2":void 0}function b(e,t){return function(n,a){var r,s=!1;while(null!=(r=n.next())){if(r==e&&!s){a.tokenize=f;break}s=(g||t)&&!s&&"\\"==r}return"string"}}function y(e){return function(t,n){var a=t.match(/^.*?(\/\*|\*\/)/);return a?"/*"==a[1]?n.tokenize=y(e+1):n.tokenize=e>1?y(e-1):f:t.skipToEnd(),"comment"}}function v(e,t,n){t.context={prev:t.context,indent:e.indentation(),col:e.column(),type:n}}function x(e){e.indent=e.context.indent,e.context=e.context.prev}return{startState:function(){return{tokenize:f,context:null}},token:function(e,t){if(e.sol()&&t.context&&null==t.context.align&&(t.context.align=!1),t.tokenize==f&&e.eatSpace())return null;var n=t.tokenize(e,t);if("comment"==n)return n;t.context&&null==t.context.align&&(t.context.align=!0);var a=e.current();return"("==a?v(e,t,")"):"["==a?v(e,t,"]"):t.context&&t.context.type==a&&x(t),n},indent:function(n,a){var r=n.context;if(!r)return e.Pass;var s=a.charAt(0)==r.type;return r.align?r.col+(s?0:1):r.indent+(s?0:t.indentUnit)},blockCommentStart:"/*",blockCommentEnd:"*/",lineComment:m.commentSlashSlash?"//":m.commentHash?"#":"--",closeBrackets:"()[]{}''\"\"``"}}));var s="alter and as asc between by count create delete desc distinct drop from group having in insert into is join like not on or order select set table union update values where limit ";function i(e){for(var t={},n=e.split(" "),a=0;a<n.length;++a)t[n[a]]=!0;return t}var o="bool boolean bit blob enum long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text bigint int int1 int2 int3 int4 int8 integer float float4 float8 double char varbinary varchar varcharacter precision real date datetime year unsigned signed decimal numeric";e.defineMIME("text/x-sql",{name:"sql",keywords:i(s+"begin"),builtin:i(o),atoms:i("false true null unknown"),dateSQL:i("date time timestamp"),support:i("ODBCdotTable doubleQuote binaryNumber hexNumber")}),e.defineMIME("text/x-mssql",{name:"sql",client:i("$partition binary_checksum checksum connectionproperty context_info current_request_id error_line error_message error_number error_procedure error_severity error_state formatmessage get_filestream_transaction_context getansinull host_id host_name isnull isnumeric min_active_rowversion newid newsequentialid rowcount_big xact_state object_id"),keywords:i(s+"begin trigger proc view index for add constraint key primary foreign collate clustered nonclustered declare exec go if use index holdlock nolock nowait paglock readcommitted readcommittedlock readpast readuncommitted repeatableread rowlock serializable snapshot tablock tablockx updlock with"),builtin:i("bigint numeric bit smallint decimal smallmoney int tinyint money float real char varchar text nchar nvarchar ntext binary varbinary image cursor timestamp hierarchyid uniqueidentifier sql_variant xml table "),atoms:i("is not null like and or in left right between inner outer join all any some cross unpivot pivot exists"),operatorChars:/^[*+\-%<>!=^\&|\/]/,brackets:/^[\{}\(\)]/,punctuation:/^[;.,:/]/,backslashStringEscapes:!1,dateSQL:i("date datetimeoffset datetime2 smalldatetime datetime time"),hooks:{"@":a}}),e.defineMIME("text/x-mysql",{name:"sql",client:i("charset clear connect edit ego exit go help nopager notee nowarning pager print prompt quit rehash source status system tee"),keywords:i(s+"accessible action add after algorithm all analyze asensitive at authors auto_increment autocommit avg avg_row_length before binary binlog both btree cache call cascade cascaded case catalog_name chain change changed character check checkpoint checksum class_origin client_statistics close coalesce code collate collation collations column columns comment commit committed completion concurrent condition connection consistent constraint contains continue contributors convert cross current current_date current_time current_timestamp current_user cursor data database databases day_hour day_microsecond day_minute day_second deallocate dec declare default delay_key_write delayed delimiter des_key_file describe deterministic dev_pop dev_samp deviance diagnostics directory disable discard distinctrow div dual dumpfile each elseif enable enclosed end ends engine engines enum errors escape escaped even event events every execute exists exit explain extended fast fetch field fields first flush for force foreign found_rows full fulltext function general get global grant grants group group_concat handler hash help high_priority hosts hour_microsecond hour_minute hour_second if ignore ignore_server_ids import index index_statistics infile inner innodb inout insensitive insert_method install interval invoker isolation iterate key keys kill language last leading leave left level limit linear lines list load local localtime localtimestamp lock logs low_priority master master_heartbeat_period master_ssl_verify_server_cert masters match max max_rows maxvalue message_text middleint migrate min min_rows minute_microsecond minute_second mod mode modifies modify mutex mysql_errno natural next no no_write_to_binlog offline offset one online open optimize option optionally out outer outfile pack_keys parser partition partitions password phase plugin plugins prepare preserve prev primary privileges procedure processlist profile profiles purge query quick range read read_write reads real rebuild recover references regexp relaylog release remove rename reorganize repair repeatable replace require resignal restrict resume return returns revoke right rlike rollback rollup row row_format rtree savepoint schedule schema schema_name schemas second_microsecond security sensitive separator serializable server session share show signal slave slow smallint snapshot soname spatial specific sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_no_cache sql_small_result sqlexception sqlstate sqlwarning ssl start starting starts status std stddev stddev_pop stddev_samp storage straight_join subclass_origin sum suspend table_name table_statistics tables tablespace temporary terminated to trailing transaction trigger triggers truncate uncommitted undo uninstall unique unlock upgrade usage use use_frm user user_resources user_statistics using utc_date utc_time utc_timestamp value variables varying view views warnings when while with work write xa xor year_month zerofill begin do then else loop repeat"),builtin:i("bool boolean bit blob decimal double float long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text bigint int int1 int2 int3 int4 int8 integer float float4 float8 double char varbinary varchar varcharacter precision date datetime year unsigned signed numeric"),atoms:i("false true null unknown"),operatorChars:/^[*+\-%<>!=&|^]/,dateSQL:i("date time timestamp"),support:i("ODBCdotTable decimallessFloat zerolessFloat binaryNumber hexNumber doubleQuote nCharCast charsetCast commentHash commentSpaceRequired"),hooks:{"@":a,"`":t,"\\":r}}),e.defineMIME("text/x-mariadb",{name:"sql",client:i("charset clear connect edit ego exit go help nopager notee nowarning pager print prompt quit rehash source status system tee"),keywords:i(s+"accessible action add after algorithm all always analyze asensitive at authors auto_increment autocommit avg avg_row_length before binary binlog both btree cache call cascade cascaded case catalog_name chain change changed character check checkpoint checksum class_origin client_statistics close coalesce code collate collation collations column columns comment commit committed completion concurrent condition connection consistent constraint contains continue contributors convert cross current current_date current_time current_timestamp current_user cursor data database databases day_hour day_microsecond day_minute day_second deallocate dec declare default delay_key_write delayed delimiter des_key_file describe deterministic dev_pop dev_samp deviance diagnostics directory disable discard distinctrow div dual dumpfile each elseif enable enclosed end ends engine engines enum errors escape escaped even event events every execute exists exit explain extended fast fetch field fields first flush for force foreign found_rows full fulltext function general generated get global grant grants group group_concat handler hard hash help high_priority hosts hour_microsecond hour_minute hour_second if ignore ignore_server_ids import index index_statistics infile inner innodb inout insensitive insert_method install interval invoker isolation iterate key keys kill language last leading leave left level limit linear lines list load local localtime localtimestamp lock logs low_priority master master_heartbeat_period master_ssl_verify_server_cert masters match max max_rows maxvalue message_text middleint migrate min min_rows minute_microsecond minute_second mod mode modifies modify mutex mysql_errno natural next no no_write_to_binlog offline offset one online open optimize option optionally out outer outfile pack_keys parser partition partitions password persistent phase plugin plugins prepare preserve prev primary privileges procedure processlist profile profiles purge query quick range read read_write reads real rebuild recover references regexp relaylog release remove rename reorganize repair repeatable replace require resignal restrict resume return returns revoke right rlike rollback rollup row row_format rtree savepoint schedule schema schema_name schemas second_microsecond security sensitive separator serializable server session share show shutdown signal slave slow smallint snapshot soft soname spatial specific sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_no_cache sql_small_result sqlexception sqlstate sqlwarning ssl start starting starts status std stddev stddev_pop stddev_samp storage straight_join subclass_origin sum suspend table_name table_statistics tables tablespace temporary terminated to trailing transaction trigger triggers truncate uncommitted undo uninstall unique unlock upgrade usage use use_frm user user_resources user_statistics using utc_date utc_time utc_timestamp value variables varying view views virtual warnings when while with work write xa xor year_month zerofill begin do then else loop repeat"),builtin:i("bool boolean bit blob decimal double float long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text bigint int int1 int2 int3 int4 int8 integer float float4 float8 double char varbinary varchar varcharacter precision date datetime year unsigned signed numeric"),atoms:i("false true null unknown"),operatorChars:/^[*+\-%<>!=&|^]/,dateSQL:i("date time timestamp"),support:i("ODBCdotTable decimallessFloat zerolessFloat binaryNumber hexNumber doubleQuote nCharCast charsetCast commentHash commentSpaceRequired"),hooks:{"@":a,"`":t,"\\":r}}),e.defineMIME("text/x-sqlite",{name:"sql",client:i("auth backup bail binary changes check clone databases dbinfo dump echo eqp exit explain fullschema headers help import imposter indexes iotrace limit lint load log mode nullvalue once open output print prompt quit read restore save scanstats schema separator session shell show stats system tables testcase timeout timer trace vfsinfo vfslist vfsname width"),keywords:i(s+"abort action add after all analyze attach autoincrement before begin cascade case cast check collate column commit conflict constraint cross current_date current_time current_timestamp database default deferrable deferred detach each else end escape except exclusive exists explain fail for foreign full glob if ignore immediate index indexed initially inner instead intersect isnull key left limit match natural no notnull null of offset outer plan pragma primary query raise recursive references regexp reindex release rename replace restrict right rollback row savepoint temp temporary then to transaction trigger unique using vacuum view virtual when with without"),builtin:i("bool boolean bit blob decimal double float long longblob longtext medium mediumblob mediumint mediumtext time timestamp tinyblob tinyint tinytext text clob bigint int int2 int8 integer float double char varchar date datetime year unsigned signed numeric real"),atoms:i("null current_date current_time current_timestamp"),operatorChars:/^[*+\-%<>!=&|/~]/,dateSQL:i("date time timestamp datetime"),support:i("decimallessFloat zerolessFloat"),identifierQuote:'"',hooks:{"@":a,":":a,"?":a,$:a,'"':n,"`":t}}),e.defineMIME("text/x-cassandra",{name:"sql",client:{},keywords:i("add all allow alter and any apply as asc authorize batch begin by clustering columnfamily compact consistency count create custom delete desc distinct drop each_quorum exists filtering from grant if in index insert into key keyspace keyspaces level limit local_one local_quorum modify nan norecursive nosuperuser not of on one order password permission permissions primary quorum rename revoke schema select set storage superuser table three to token truncate ttl two type unlogged update use user users using values where with writetime"),builtin:i("ascii bigint blob boolean counter decimal double float frozen inet int list map static text timestamp timeuuid tuple uuid varchar varint"),atoms:i("false true infinity NaN"),operatorChars:/^[<>=]/,dateSQL:{},support:i("commentSlashSlash decimallessFloat"),hooks:{}}),e.defineMIME("text/x-plsql",{name:"sql",client:i("appinfo arraysize autocommit autoprint autorecovery autotrace blockterminator break btitle cmdsep colsep compatibility compute concat copycommit copytypecheck define describe echo editfile embedded escape exec execute feedback flagger flush heading headsep instance linesize lno loboffset logsource long longchunksize markup native newpage numformat numwidth pagesize pause pno recsep recsepchar release repfooter repheader serveroutput shiftinout show showmode size spool sqlblanklines sqlcase sqlcode sqlcontinue sqlnumber sqlpluscompatibility sqlprefix sqlprompt sqlterminator suffix tab term termout time timing trimout trimspool ttitle underline verify version wrap"),keywords:i("abort accept access add all alter and any array arraylen as asc assert assign at attributes audit authorization avg base_table begin between binary_integer body boolean by case cast char char_base check close cluster clusters colauth column comment commit compress connect connected constant constraint crash create current currval cursor data_base database date dba deallocate debugoff debugon decimal declare default definition delay delete desc digits dispose distinct do drop else elseif elsif enable end entry escape exception exception_init exchange exclusive exists exit external fast fetch file for force form from function generic goto grant group having identified if immediate in increment index indexes indicator initial initrans insert interface intersect into is key level library like limited local lock log logging long loop master maxextents maxtrans member minextents minus mislabel mode modify multiset new next no noaudit nocompress nologging noparallel not nowait number_base object of off offline on online only open option or order out package parallel partition pctfree pctincrease pctused pls_integer positive positiven pragma primary prior private privileges procedure public raise range raw read rebuild record ref references refresh release rename replace resource restrict return returning returns reverse revoke rollback row rowid rowlabel rownum rows run savepoint schema segment select separate session set share snapshot some space split sql start statement storage subtype successful synonym tabauth table tables tablespace task terminate then to trigger truncate type union unique unlimited unrecoverable unusable update use using validate value values variable view views when whenever where while with work"),builtin:i("abs acos add_months ascii asin atan atan2 average bfile bfilename bigserial bit blob ceil character chartorowid chr clob concat convert cos cosh count dec decode deref dual dump dup_val_on_index empty error exp false float floor found glb greatest hextoraw initcap instr instrb int integer isopen last_day least length lengthb ln lower lpad ltrim lub make_ref max min mlslabel mod months_between natural naturaln nchar nclob new_time next_day nextval nls_charset_decl_len nls_charset_id nls_charset_name nls_initcap nls_lower nls_sort nls_upper nlssort no_data_found notfound null number numeric nvarchar2 nvl others power rawtohex real reftohex round rowcount rowidtochar rowtype rpad rtrim serial sign signtype sin sinh smallint soundex sqlcode sqlerrm sqrt stddev string substr substrb sum sysdate tan tanh to_char text to_date to_label to_multi_byte to_number to_single_byte translate true trunc uid unlogged upper user userenv varchar varchar2 variance varying vsize xml"),operatorChars:/^[*\/+\-%<>!=~]/,dateSQL:i("date time timestamp"),support:i("doubleQuote nCharCast zerolessFloat binaryNumber hexNumber")}),e.defineMIME("text/x-hive",{name:"sql",keywords:i("select alter $elem$ $key$ $value$ add after all analyze and archive as asc before between binary both bucket buckets by cascade case cast change cluster clustered clusterstatus collection column columns comment compute concatenate continue create cross cursor data database databases dbproperties deferred delete delimited desc describe directory disable distinct distribute drop else enable end escaped exclusive exists explain export extended external fetch fields fileformat first format formatted from full function functions grant group having hold_ddltime idxproperties if import in index indexes inpath inputdriver inputformat insert intersect into is items join keys lateral left like limit lines load local location lock locks mapjoin materialized minus msck no_drop nocompress not of offline on option or order out outer outputdriver outputformat overwrite partition partitioned partitions percent plus preserve procedure purge range rcfile read readonly reads rebuild recordreader recordwriter recover reduce regexp rename repair replace restrict revoke right rlike row schema schemas semi sequencefile serde serdeproperties set shared show show_database sort sorted ssl statistics stored streamtable table tables tablesample tblproperties temporary terminated textfile then tmp to touch transform trigger unarchive undo union uniquejoin unlock update use using utc utc_tmestamp view when where while with admin authorization char compact compactions conf cube current current_date current_timestamp day decimal defined dependency directories elem_type exchange file following for grouping hour ignore inner interval jar less logical macro minute month more none noscan over owner partialscan preceding pretty principals protection reload rewrite role roles rollup rows second server sets skewed transactions truncate unbounded unset uri user values window year"),builtin:i("bool boolean long timestamp tinyint smallint bigint int float double date datetime unsigned string array struct map uniontype key_type utctimestamp value_type varchar"),atoms:i("false true null unknown"),operatorChars:/^[*+\-%<>!=]/,dateSQL:i("date timestamp"),support:i("ODBCdotTable doubleQuote binaryNumber hexNumber")}),e.defineMIME("text/x-pgsql",{name:"sql",client:i("source"),keywords:i(s+"a abort abs absent absolute access according action ada add admin after aggregate alias all allocate also alter always analyse analyze and any are array array_agg array_max_cardinality as asc asensitive assert assertion assignment asymmetric at atomic attach attribute attributes authorization avg backward base64 before begin begin_frame begin_partition bernoulli between bigint binary bit bit_length blob blocked bom boolean both breadth by c cache call called cardinality cascade cascaded case cast catalog catalog_name ceil ceiling chain char char_length character character_length character_set_catalog character_set_name character_set_schema characteristics characters check checkpoint class class_origin clob close cluster coalesce cobol collate collation collation_catalog collation_name collation_schema collect column column_name columns command_function command_function_code comment comments commit committed concurrently condition condition_number configuration conflict connect connection connection_name constant constraint constraint_catalog constraint_name constraint_schema constraints constructor contains content continue control conversion convert copy corr corresponding cost count covar_pop covar_samp create cross csv cube cume_dist current current_catalog current_date current_default_transform_group current_path current_role current_row current_schema current_time current_timestamp current_transform_group_for_type current_user cursor cursor_name cycle data database datalink datatype date datetime_interval_code datetime_interval_precision day db deallocate debug dec decimal declare default defaults deferrable deferred defined definer degree delete delimiter delimiters dense_rank depends depth deref derived desc describe descriptor detach detail deterministic diagnostics dictionary disable discard disconnect dispatch distinct dlnewcopy dlpreviouscopy dlurlcomplete dlurlcompleteonly dlurlcompletewrite dlurlpath dlurlpathonly dlurlpathwrite dlurlscheme dlurlserver dlvalue do document domain double drop dump dynamic dynamic_function dynamic_function_code each element else elseif elsif empty enable encoding encrypted end end_frame end_partition endexec enforced enum equals errcode error escape event every except exception exclude excluding exclusive exec execute exists exit exp explain expression extension external extract false family fetch file filter final first first_value flag float floor following for force foreach foreign fortran forward found frame_row free freeze from fs full function functions fusion g general generated get global go goto grant granted greatest group grouping groups handler having header hex hierarchy hint hold hour id identity if ignore ilike immediate immediately immutable implementation implicit import in include including increment indent index indexes indicator info inherit inherits initially inline inner inout input insensitive insert instance instantiable instead int integer integrity intersect intersection interval into invoker is isnull isolation join k key key_member key_type label lag language large last last_value lateral lead leading leakproof least left length level library like like_regex limit link listen ln load local localtime localtimestamp location locator lock locked log logged loop lower m map mapping match matched materialized max max_cardinality maxvalue member merge message message_length message_octet_length message_text method min minute minvalue mod mode modifies module month more move multiset mumps name names namespace national natural nchar nclob nesting new next nfc nfd nfkc nfkd nil no none normalize normalized not nothing notice notify notnull nowait nth_value ntile null nullable nullif nulls number numeric object occurrences_regex octet_length octets of off offset oids old on only open operator option options or order ordering ordinality others out outer output over overlaps overlay overriding owned owner p pad parallel parameter parameter_mode parameter_name parameter_ordinal_position parameter_specific_catalog parameter_specific_name parameter_specific_schema parser partial partition pascal passing passthrough password path percent percent_rank percentile_cont percentile_disc perform period permission pg_context pg_datatype_name pg_exception_context pg_exception_detail pg_exception_hint placing plans pli policy portion position position_regex power precedes preceding precision prepare prepared preserve primary print_strict_params prior privileges procedural procedure procedures program public publication query quote raise range rank read reads real reassign recheck recovery recursive ref references referencing refresh regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy regr_syy reindex relative release rename repeatable replace replica requiring reset respect restart restore restrict result result_oid return returned_cardinality returned_length returned_octet_length returned_sqlstate returning returns reverse revoke right role rollback rollup routine routine_catalog routine_name routine_schema routines row row_count row_number rows rowtype rule savepoint scale schema schema_name schemas scope scope_catalog scope_name scope_schema scroll search second section security select selective self sensitive sequence sequences serializable server server_name session session_user set setof sets share show similar simple size skip slice smallint snapshot some source space specific specific_name specifictype sql sqlcode sqlerror sqlexception sqlstate sqlwarning sqrt stable stacked standalone start state statement static statistics stddev_pop stddev_samp stdin stdout storage strict strip structure style subclass_origin submultiset subscription substring substring_regex succeeds sum symmetric sysid system system_time system_user t table table_name tables tablesample tablespace temp template temporary text then ties time timestamp timezone_hour timezone_minute to token top_level_count trailing transaction transaction_active transactions_committed transactions_rolled_back transform transforms translate translate_regex translation treat trigger trigger_catalog trigger_name trigger_schema trim trim_array true truncate trusted type types uescape unbounded uncommitted under unencrypted union unique unknown unlink unlisten unlogged unnamed unnest until untyped update upper uri usage use_column use_variable user user_defined_type_catalog user_defined_type_code user_defined_type_name user_defined_type_schema using vacuum valid validate validator value value_of values var_pop var_samp varbinary varchar variable_conflict variadic varying verbose version versioning view views volatile warning when whenever where while whitespace width_bucket window with within without work wrapper write xml xmlagg xmlattributes xmlbinary xmlcast xmlcomment xmlconcat xmldeclaration xmldocument xmlelement xmlexists xmlforest xmliterate xmlnamespaces xmlparse xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltext xmlvalidate year yes zone"),builtin:i("bigint int8 bigserial serial8 bit varying varbit boolean bool box bytea character char varchar cidr circle date double precision float8 inet integer int int4 interval json jsonb line lseg macaddr macaddr8 money numeric decimal path pg_lsn point polygon real float4 smallint int2 smallserial serial2 serial serial4 text time without zone with timetz timestamp timestamptz tsquery tsvector txid_snapshot uuid xml"),atoms:i("false true null unknown"),operatorChars:/^[*\/+\-%<>!=&|^\/#@?~]/,backslashStringEscapes:!1,dateSQL:i("date time timestamp"),support:i("ODBCdotTable decimallessFloat zerolessFloat binaryNumber hexNumber nCharCast charsetCast escapeConstant")}),e.defineMIME("text/x-gql",{name:"sql",keywords:i("ancestor and asc by contains desc descendant distinct from group has in is limit offset on order select superset where"),atoms:i("false true"),builtin:i("blob datetime first key __key__ string integer double boolean null"),operatorChars:/^[*+\-%<>!=]/}),e.defineMIME("text/x-gpsql",{name:"sql",client:i("source"),keywords:i("abort absolute access action active add admin after aggregate all also alter always analyse analyze and any array as asc assertion assignment asymmetric at authorization backward before begin between bigint binary bit boolean both by cache called cascade cascaded case cast chain char character characteristics check checkpoint class close cluster coalesce codegen collate column comment commit committed concurrency concurrently configuration connection constraint constraints contains content continue conversion copy cost cpu_rate_limit create createdb createexttable createrole createuser cross csv cube current current_catalog current_date current_role current_schema current_time current_timestamp current_user cursor cycle data database day deallocate dec decimal declare decode default defaults deferrable deferred definer delete delimiter delimiters deny desc dictionary disable discard distinct distributed do document domain double drop dxl each else enable encoding encrypted end enum errors escape every except exchange exclude excluding exclusive execute exists explain extension external extract false family fetch fields filespace fill filter first float following for force foreign format forward freeze from full function global grant granted greatest group group_id grouping handler hash having header hold host hour identity if ignore ilike immediate immutable implicit in including inclusive increment index indexes inherit inherits initially inline inner inout input insensitive insert instead int integer intersect interval into invoker is isnull isolation join key language large last leading least left level like limit list listen load local localtime localtimestamp location lock log login mapping master match maxvalue median merge minute minvalue missing mode modifies modify month move name names national natural nchar new newline next no nocreatedb nocreateexttable nocreaterole nocreateuser noinherit nologin none noovercommit nosuperuser not nothing notify notnull nowait null nullif nulls numeric object of off offset oids old on only operator option options or order ordered others out outer over overcommit overlaps overlay owned owner parser partial partition partitions passing password percent percentile_cont percentile_disc placing plans position preceding precision prepare prepared preserve primary prior privileges procedural procedure protocol queue quote randomly range read readable reads real reassign recheck recursive ref references reindex reject relative release rename repeatable replace replica reset resource restart restrict returning returns revoke right role rollback rollup rootpartition row rows rule savepoint scatter schema scroll search second security segment select sequence serializable session session_user set setof sets share show similar simple smallint some split sql stable standalone start statement statistics stdin stdout storage strict strip subpartition subpartitions substring superuser symmetric sysid system table tablespace temp template temporary text then threshold ties time timestamp to trailing transaction treat trigger trim true truncate trusted type unbounded uncommitted unencrypted union unique unknown unlisten until update user using vacuum valid validation validator value values varchar variadic varying verbose version view volatile web when where whitespace window with within without work writable write xml xmlattributes xmlconcat xmlelement xmlexists xmlforest xmlparse xmlpi xmlroot xmlserialize year yes zone"),builtin:i("bigint int8 bigserial serial8 bit varying varbit boolean bool box bytea character char varchar cidr circle date double precision float float8 inet integer int int4 interval json jsonb line lseg macaddr macaddr8 money numeric decimal path pg_lsn point polygon real float4 smallint int2 smallserial serial2 serial serial4 text time without zone with timetz timestamp timestamptz tsquery tsvector txid_snapshot uuid xml"),atoms:i("false true null unknown"),operatorChars:/^[*+\-%<>!=&|^\/#@?~]/,dateSQL:i("date time timestamp"),support:i("ODBCdotTable decimallessFloat zerolessFloat binaryNumber hexNumber nCharCast charsetCast")}),e.defineMIME("text/x-sparksql",{name:"sql",keywords:i("add after all alter analyze and anti archive array as asc at between bucket buckets by cache cascade case cast change clear cluster clustered codegen collection column columns comment commit compact compactions compute concatenate cost create cross cube current current_date current_timestamp database databases data dbproperties defined delete delimited deny desc describe dfs directories distinct distribute drop else end escaped except exchange exists explain export extended external false fields fileformat first following for format formatted from full function functions global grant group grouping having if ignore import in index indexes inner inpath inputformat insert intersect interval into is items join keys last lateral lazy left like limit lines list load local location lock locks logical macro map minus msck natural no not null nulls of on optimize option options or order out outer outputformat over overwrite partition partitioned partitions percent preceding principals purge range recordreader recordwriter recover reduce refresh regexp rename repair replace reset restrict revoke right rlike role roles rollback rollup row rows schema schemas select semi separated serde serdeproperties set sets show skewed sort sorted start statistics stored stratify struct table tables tablesample tblproperties temp temporary terminated then to touch transaction transactions transform true truncate unarchive unbounded uncache union unlock unset use using values view when where window with"),builtin:i("abs acos acosh add_months aggregate and any approx_count_distinct approx_percentile array array_contains array_distinct array_except array_intersect array_join array_max array_min array_position array_remove array_repeat array_sort array_union arrays_overlap arrays_zip ascii asin asinh assert_true atan atan2 atanh avg base64 between bigint bin binary bit_and bit_count bit_get bit_length bit_or bit_xor bool_and bool_or boolean bround btrim cardinality case cast cbrt ceil ceiling char char_length character_length chr coalesce collect_list collect_set concat concat_ws conv corr cos cosh cot count count_if count_min_sketch covar_pop covar_samp crc32 cume_dist current_catalog current_database current_date current_timestamp current_timezone current_user date date_add date_format date_from_unix_date date_part date_sub date_trunc datediff day dayofmonth dayofweek dayofyear decimal decode degrees delimited dense_rank div double e element_at elt encode every exists exp explode explode_outer expm1 extract factorial filter find_in_set first first_value flatten float floor forall format_number format_string from_csv from_json from_unixtime from_utc_timestamp get_json_object getbit greatest grouping grouping_id hash hex hour hypot if ifnull in initcap inline inline_outer input_file_block_length input_file_block_start input_file_name inputformat instr int isnan isnotnull isnull java_method json_array_length json_object_keys json_tuple kurtosis lag last last_day last_value lcase lead least left length levenshtein like ln locate log log10 log1p log2 lower lpad ltrim make_date make_dt_interval make_interval make_timestamp make_ym_interval map map_concat map_entries map_filter map_from_arrays map_from_entries map_keys map_values map_zip_with max max_by md5 mean min min_by minute mod monotonically_increasing_id month months_between named_struct nanvl negative next_day not now nth_value ntile nullif nvl nvl2 octet_length or outputformat overlay parse_url percent_rank percentile percentile_approx pi pmod posexplode posexplode_outer position positive pow power printf quarter radians raise_error rand randn random rank rcfile reflect regexp regexp_extract regexp_extract_all regexp_like regexp_replace repeat replace reverse right rint rlike round row_number rpad rtrim schema_of_csv schema_of_json second sentences sequence sequencefile serde session_window sha sha1 sha2 shiftleft shiftright shiftrightunsigned shuffle sign signum sin sinh size skewness slice smallint some sort_array soundex space spark_partition_id split sqrt stack std stddev stddev_pop stddev_samp str_to_map string struct substr substring substring_index sum tan tanh textfile timestamp timestamp_micros timestamp_millis timestamp_seconds tinyint to_csv to_date to_json to_timestamp to_unix_timestamp to_utc_timestamp transform transform_keys transform_values translate trim trunc try_add try_divide typeof ucase unbase64 unhex uniontype unix_date unix_micros unix_millis unix_seconds unix_timestamp upper uuid var_pop var_samp variance version weekday weekofyear when width_bucket window xpath xpath_boolean xpath_double xpath_float xpath_int xpath_long xpath_number xpath_short xpath_string xxhash64 year zip_with"),atoms:i("false true null"),operatorChars:/^[*\/+\-%<>!=~&|^]/,dateSQL:i("date time timestamp"),support:i("ODBCdotTable doubleQuote zerolessFloat")}),e.defineMIME("text/x-esper",{name:"sql",client:i("source"),keywords:i("alter and as asc between by count create delete desc distinct drop from group having in insert into is join like not on or order select set table union update values where limit after all and as at asc avedev avg between by case cast coalesce count create current_timestamp day days delete define desc distinct else end escape events every exists false first from full group having hour hours in inner insert instanceof into irstream is istream join last lastweekday left limit like max match_recognize matches median measures metadatasql min minute minutes msec millisecond milliseconds not null offset on or order outer output partition pattern prev prior regexp retain-union retain-intersection right rstream sec second seconds select set some snapshot sql stddev sum then true unidirectional until update variable weekday when where window"),builtin:{},atoms:i("false true null"),operatorChars:/^[*+\-%<>!=&|^\/#@?~]/,dateSQL:i("time"),support:i("decimallessFloat zerolessFloat binaryNumber hexNumber")})}))}}]);
//# sourceMappingURL=chunk-31204840.6d643f84.js.map